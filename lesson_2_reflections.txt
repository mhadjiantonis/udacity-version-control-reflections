What happens when you initialize a repository? Why do you need to do it?

An empty git repository is created.  By initializing a repository we are 
enabling ourselves to track the history of specific files it contains.


How is the staging area different from the working directory and the 
repository? What value do you think it offers?

The staging area contains only those files in the working directory that
are to be included in a new commit of the repository.  It offers a space
to collect all the changes that must be commited.


How can you use the staging area to make sure you have one commit per logical 
change?

We can add there only the relevant files.  After that we can check the changes 
using git diff and git diff --staged.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Brances can be used to add trial features in our documents, when we want to 
keep track of these changes and still have an original version, that can also
evilve.


How do the diagrams help you visualize the branch structure?

They show the different brances of changes and the parent o feach commit.


What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?

The changes made in both branches are merged.  The changes made in individual 
paths now come together.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges 
manually?

Making the merge automatically saves time, in cases where the edits neede to be 
done on files are unambiguous.  Of course, in some exceptional cases the 
automatic procedure might not detect a conflict.

